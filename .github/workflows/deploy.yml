name: Deploy to Vercel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  NODE_ENV: production

defaults:
  run:
    working-directory: ./GiaSi-Portfolio

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: GiaSi-Portfolio/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('GiaSi-Portfolio/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Clean install dependencies
        run: |
          npm ci --legacy-peer-deps --prefer-offline --no-audit
        env:
          NODE_OPTIONS: --max_old_space_size=4096

      - name: Run linting
        run: npm run lint || echo "Linting completed with warnings"
        continue-on-error: true

      - name: Build project with verbose output
        run: npm run build
        env:
          NODE_OPTIONS: --max_old_space_size=4096
          CI: true

  deploy-preview:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps --prefer-offline --no-audit
        env:
          NODE_OPTIONS: --max_old_space_size=4096

      - name: Build project
        run: npm run build
        env:
          NODE_OPTIONS: --max_old_space_size=4096
          CI: true

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel Preview
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps --prefer-offline --no-audit
        env:
          NODE_OPTIONS: --max_old_space_size=4096

      - name: Build project
        run: npm run build
        env:
          NODE_OPTIONS: --max_old_space_size=4096
          CI: true

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel Production
        run: vercel deploy --prod --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  deployment-success:
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: success()

    steps:
      - name: Deployment Success Notification
        run: |
          echo "ðŸŽ‰ Deployment successful!"
          echo "ðŸ”— Production URL: https://giasinguyen.vercel.app"
          echo "ðŸ“Š View project: https://vercel.com/giasinguyens-projects/gia-si-portfolio"
